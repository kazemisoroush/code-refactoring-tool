// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kazemisoroush/code-refactoring-tool/api/services (interfaces: AgentService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/kazemisoroush/code-refactoring-tool/api/models"
)

// MockAgentService is a mock of AgentService interface.
type MockAgentService struct {
	ctrl     *gomock.Controller
	recorder *MockAgentServiceMockRecorder
}

// MockAgentServiceMockRecorder is the mock recorder for MockAgentService.
type MockAgentServiceMockRecorder struct {
	mock *MockAgentService
}

// NewMockAgentService creates a new mock instance.
func NewMockAgentService(ctrl *gomock.Controller) *MockAgentService {
	mock := &MockAgentService{ctrl: ctrl}
	mock.recorder = &MockAgentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentService) EXPECT() *MockAgentServiceMockRecorder {
	return m.recorder
}

// CreateAgent mocks base method.
func (m *MockAgentService) CreateAgent(arg0 context.Context, arg1 models.CreateAgentRequest) (*models.CreateAgentResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAgent", arg0, arg1)
	ret0, _ := ret[0].(*models.CreateAgentResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAgent indicates an expected call of CreateAgent.
func (mr *MockAgentServiceMockRecorder) CreateAgent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAgent", reflect.TypeOf((*MockAgentService)(nil).CreateAgent), arg0, arg1)
}

// DeleteAgent mocks base method.
func (m *MockAgentService) DeleteAgent(arg0 context.Context, arg1 string) (*models.DeleteAgentResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAgent", arg0, arg1)
	ret0, _ := ret[0].(*models.DeleteAgentResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteAgent indicates an expected call of DeleteAgent.
func (mr *MockAgentServiceMockRecorder) DeleteAgent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAgent", reflect.TypeOf((*MockAgentService)(nil).DeleteAgent), arg0, arg1)
}

// GetAgent mocks base method.
func (m *MockAgentService) GetAgent(arg0 context.Context, arg1 string) (*models.GetAgentResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgent", arg0, arg1)
	ret0, _ := ret[0].(*models.GetAgentResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgent indicates an expected call of GetAgent.
func (mr *MockAgentServiceMockRecorder) GetAgent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgent", reflect.TypeOf((*MockAgentService)(nil).GetAgent), arg0, arg1)
}

// ListAgents mocks base method.
func (m *MockAgentService) ListAgents(arg0 context.Context, arg1 models.ListAgentsRequest) (*models.ListAgentsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAgents", arg0, arg1)
	ret0, _ := ret[0].(*models.ListAgentsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAgents indicates an expected call of ListAgents.
func (mr *MockAgentServiceMockRecorder) ListAgents(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAgents", reflect.TypeOf((*MockAgentService)(nil).ListAgents), arg0, arg1)
}
