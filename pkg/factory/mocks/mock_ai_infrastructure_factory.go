// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kazemisoroush/code-refactoring-tool/pkg/factory (interfaces: AIInfrastructureFactory)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/kazemisoroush/code-refactoring-tool/api/models"
	factory "github.com/kazemisoroush/code-refactoring-tool/pkg/factory"
)

// MockAIInfrastructureFactory is a mock of AIInfrastructureFactory interface.
type MockAIInfrastructureFactory struct {
	ctrl     *gomock.Controller
	recorder *MockAIInfrastructureFactoryMockRecorder
}

// MockAIInfrastructureFactoryMockRecorder is the mock recorder for MockAIInfrastructureFactory.
type MockAIInfrastructureFactoryMockRecorder struct {
	mock *MockAIInfrastructureFactory
}

// NewMockAIInfrastructureFactory creates a new mock instance.
func NewMockAIInfrastructureFactory(ctrl *gomock.Controller) *MockAIInfrastructureFactory {
	mock := &MockAIInfrastructureFactory{ctrl: ctrl}
	mock.recorder = &MockAIInfrastructureFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAIInfrastructureFactory) EXPECT() *MockAIInfrastructureFactoryMockRecorder {
	return m.recorder
}

// CreateAgentInfrastructure mocks base method.
func (m *MockAIInfrastructureFactory) CreateAgentInfrastructure(arg0 context.Context, arg1 models.AIProvider) (*factory.AIInfrastructureResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAgentInfrastructure", arg0, arg1)
	ret0, _ := ret[0].(*factory.AIInfrastructureResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAgentInfrastructure indicates an expected call of CreateAgentInfrastructure.
func (mr *MockAIInfrastructureFactoryMockRecorder) CreateAgentInfrastructure(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAgentInfrastructure", reflect.TypeOf((*MockAIInfrastructureFactory)(nil).CreateAgentInfrastructure), arg0, arg1)
}

// DestroyAgentInfrastructure mocks base method.
func (m *MockAIInfrastructureFactory) DestroyAgentInfrastructure(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroyAgentInfrastructure", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DestroyAgentInfrastructure indicates an expected call of DestroyAgentInfrastructure.
func (mr *MockAIInfrastructureFactoryMockRecorder) DestroyAgentInfrastructure(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroyAgentInfrastructure", reflect.TypeOf((*MockAIInfrastructureFactory)(nil).DestroyAgentInfrastructure), arg0, arg1)
}

// GetSupportedProviders mocks base method.
func (m *MockAIInfrastructureFactory) GetSupportedProviders() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSupportedProviders")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetSupportedProviders indicates an expected call of GetSupportedProviders.
func (mr *MockAIInfrastructureFactoryMockRecorder) GetSupportedProviders() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSupportedProviders", reflect.TypeOf((*MockAIInfrastructureFactory)(nil).GetSupportedProviders))
}

// UpdateAgentInfrastructure mocks base method.
func (m *MockAIInfrastructureFactory) UpdateAgentInfrastructure(arg0 context.Context, arg1 string, arg2 models.AIProvider) (*factory.AIInfrastructureResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentInfrastructure", arg0, arg1, arg2)
	ret0, _ := ret[0].(*factory.AIInfrastructureResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentInfrastructure indicates an expected call of UpdateAgentInfrastructure.
func (mr *MockAIInfrastructureFactoryMockRecorder) UpdateAgentInfrastructure(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentInfrastructure", reflect.TypeOf((*MockAIInfrastructureFactory)(nil).UpdateAgentInfrastructure), arg0, arg1, arg2)
}

// ValidateAgentConfig mocks base method.
func (m *MockAIInfrastructureFactory) ValidateAgentConfig(arg0 models.AIProvider) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateAgentConfig", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateAgentConfig indicates an expected call of ValidateAgentConfig.
func (mr *MockAIInfrastructureFactoryMockRecorder) ValidateAgentConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateAgentConfig", reflect.TypeOf((*MockAIInfrastructureFactory)(nil).ValidateAgentConfig), arg0)
}
