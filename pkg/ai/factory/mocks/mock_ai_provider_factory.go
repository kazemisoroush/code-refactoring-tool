// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kazemisoroush/code-refactoring-tool/pkg/ai/factory (interfaces: AIProviderFactory)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	builder "github.com/kazemisoroush/code-refactoring-tool/pkg/ai/builder"
	config "github.com/kazemisoroush/code-refactoring-tool/pkg/config"
)

// MockAIProviderFactory is a mock of AIProviderFactory interface.
type MockAIProviderFactory struct {
	ctrl     *gomock.Controller
	recorder *MockAIProviderFactoryMockRecorder
}

// MockAIProviderFactoryMockRecorder is the mock recorder for MockAIProviderFactory.
type MockAIProviderFactoryMockRecorder struct {
	mock *MockAIProviderFactory
}

// NewMockAIProviderFactory creates a new mock instance.
func NewMockAIProviderFactory(ctrl *gomock.Controller) *MockAIProviderFactory {
	mock := &MockAIProviderFactory{ctrl: ctrl}
	mock.recorder = &MockAIProviderFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAIProviderFactory) EXPECT() *MockAIProviderFactoryMockRecorder {
	return m.recorder
}

// CreateAgentBuilder mocks base method.
func (m *MockAIProviderFactory) CreateAgentBuilder(arg0 *config.AIConfiguration, arg1 string) (builder.AgentBuilder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAgentBuilder", arg0, arg1)
	ret0, _ := ret[0].(builder.AgentBuilder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAgentBuilder indicates an expected call of CreateAgentBuilder.
func (mr *MockAIProviderFactoryMockRecorder) CreateAgentBuilder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAgentBuilder", reflect.TypeOf((*MockAIProviderFactory)(nil).CreateAgentBuilder), arg0, arg1)
}

// CreateRAGBuilder mocks base method.
func (m *MockAIProviderFactory) CreateRAGBuilder(arg0 *config.AIConfiguration, arg1 string) (builder.RAGBuilder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRAGBuilder", arg0, arg1)
	ret0, _ := ret[0].(builder.RAGBuilder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRAGBuilder indicates an expected call of CreateRAGBuilder.
func (mr *MockAIProviderFactoryMockRecorder) CreateRAGBuilder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRAGBuilder", reflect.TypeOf((*MockAIProviderFactory)(nil).CreateRAGBuilder), arg0, arg1)
}

// ValidateAIConfiguration mocks base method.
func (m *MockAIProviderFactory) ValidateAIConfiguration(arg0 *config.AIConfiguration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateAIConfiguration", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateAIConfiguration indicates an expected call of ValidateAIConfiguration.
func (mr *MockAIProviderFactoryMockRecorder) ValidateAIConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateAIConfiguration", reflect.TypeOf((*MockAIProviderFactory)(nil).ValidateAIConfiguration), arg0)
}
