// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kazemisoroush/code-refactoring-tool/pkg/analyzer (interfaces: Analyzer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/kazemisoroush/code-refactoring-tool/pkg/analyzer/models"
)

// MockAnalyzer is a mock of Analyzer interface.
type MockAnalyzer struct {
	ctrl     *gomock.Controller
	recorder *MockAnalyzerMockRecorder
}

// MockAnalyzerMockRecorder is the mock recorder for MockAnalyzer.
type MockAnalyzerMockRecorder struct {
	mock *MockAnalyzer
}

// NewMockAnalyzer creates a new mock instance.
func NewMockAnalyzer(ctrl *gomock.Controller) *MockAnalyzer {
	mock := &MockAnalyzer{ctrl: ctrl}
	mock.recorder = &MockAnalyzerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnalyzer) EXPECT() *MockAnalyzerMockRecorder {
	return m.recorder
}

// AnalyzeCode mocks base method.
func (m *MockAnalyzer) AnalyzeCode(arg0 string) (models.AnalysisResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AnalyzeCode", arg0)
	ret0, _ := ret[0].(models.AnalysisResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AnalyzeCode indicates an expected call of AnalyzeCode.
func (mr *MockAnalyzerMockRecorder) AnalyzeCode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AnalyzeCode", reflect.TypeOf((*MockAnalyzer)(nil).AnalyzeCode), arg0)
}

// ExtractIssues mocks base method.
func (m *MockAnalyzer) ExtractIssues(arg0 models.AnalysisResult) ([]models.CodeIssue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtractIssues", arg0)
	ret0, _ := ret[0].([]models.CodeIssue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractIssues indicates an expected call of ExtractIssues.
func (mr *MockAnalyzerMockRecorder) ExtractIssues(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractIssues", reflect.TypeOf((*MockAnalyzer)(nil).ExtractIssues), arg0)
}
