basePath: /api/v1
definitions:
  CreateAgentRequest:
    properties:
      agent_name:
        description: Optional custom agent name
        example: my-code-analyzer
        type: string
      branch:
        description: Optional branch name, defaults to main
        example: main
        type: string
      repository_url:
        description: Repository URL to analyze
        example: https://github.com/user/repo
        type: string
    required:
    - repository_url
    type: object
  CreateAgentResponse:
    properties:
      agent_id:
        description: Unique identifier for the agent
        example: agent-12345
        type: string
      agent_version:
        description: Agent version
        example: v1.0.0
        type: string
      created_at:
        description: Timestamp when the agent was created
        example: "2024-01-15T10:30:00Z"
        type: string
      knowledge_base_id:
        description: Knowledge base ID associated with the agent
        example: kb-67890
        type: string
      status:
        description: Agent creation status
        example: created
        type: string
      vector_store_id:
        description: Vector store ID for the knowledge base
        example: vs-abcde
        type: string
    type: object
  CreateProjectRequest:
    properties:
      description:
        description: Optional project summary
        example: A sample project for code analysis
        type: string
      language:
        description: Optional programming language
        example: go
        type: string
      name:
        description: Human-readable project name
        example: my-project
        type: string
      tags:
        additionalProperties:
          type: string
        description: Optional user-defined key-value tags
        example:
          env: prod
          team: backend
        type: object
    required:
    - name
    type: object
  CreateProjectResponse:
    properties:
      created_at:
        description: Timestamp when the project was created
        example: "2024-01-15T10:30:00Z"
        type: string
      project_id:
        description: Unique identifier for the project
        example: proj-12345-abcde
        type: string
    type: object
  DeleteProjectResponse:
    properties:
      success:
        description: Indicates whether the deletion was successful
        example: true
        type: boolean
    type: object
  ErrorResponse:
    properties:
      code:
        description: Error code
        example: 400
        type: integer
      details:
        description: Optional error details
        example: repository_url is required
        type: string
      message:
        description: Error message
        example: Invalid request parameters
        type: string
    type: object
  GetProjectResponse:
    properties:
      created_at:
        description: Timestamp when the project was created
        example: "2024-01-15T10:30:00Z"
        type: string
      description:
        description: Optional project summary
        example: A sample project for code analysis
        type: string
      language:
        description: Optional programming language
        example: go
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Optional metadata
        example:
          version: 1.0.0
        type: object
      name:
        description: Human-readable project name
        example: my-project
        type: string
      project_id:
        description: Unique identifier for the project
        example: proj-12345-abcde
        type: string
      tags:
        additionalProperties:
          type: string
        description: Optional user-defined key-value tags
        example:
          env: prod
          team: backend
        type: object
      updated_at:
        description: Timestamp when the project was last updated
        example: "2024-01-15T10:30:00Z"
        type: string
    type: object
  ListProjectsResponse:
    properties:
      next_token:
        description: Token for next page of results
        example: eyJpZCI6InByb2otNjc4OTAifQ==
        type: string
      projects:
        description: List of project summaries
        items:
          $ref: '#/definitions/ProjectSummary'
        type: array
    type: object
  ProjectSummary:
    properties:
      created_at:
        description: Timestamp when the project was created
        example: "2024-01-15T10:30:00Z"
        type: string
      name:
        description: Human-readable project name
        example: my-project
        type: string
      project_id:
        description: Unique identifier for the project
        example: proj-12345-abcde
        type: string
      tags:
        additionalProperties:
          type: string
        description: Optional user-defined key-value tags
        example:
          env: prod
          team: backend
        type: object
    type: object
  UpdateProjectRequest:
    properties:
      description:
        description: Optional project summary
        example: Updated project description
        type: string
      language:
        description: Optional programming language
        example: python
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Optional metadata
        example:
          version: 1.1.0
        type: object
      name:
        description: Optional human-readable project name
        example: updated-project
        type: string
      projectID:
        description: Unique identifier for the project
        example: proj-12345-abcde
        type: string
      tags:
        additionalProperties:
          type: string
        description: Optional user-defined key-value tags
        example:
          env: staging
          team: frontend
        type: object
    required:
    - projectID
    type: object
  UpdateProjectResponse:
    properties:
      project_id:
        description: Unique identifier for the project
        example: proj-12345-abcde
        type: string
      updated_at:
        description: Timestamp when the project was last updated
        example: "2024-01-15T11:30:00Z"
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for creating and managing AI-powered code refactoring agents
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Code Refactor Tool API
  version: "1.0"
paths:
  /agent/{id}:
    delete:
      description: Delete an agent and its associated resources
      parameters:
      - description: Agent ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Agent deleted successfully
        "404":
          description: Agent not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete an agent by ID
      tags:
      - agents
    get:
      description: Retrieve agent information by agent ID
      parameters:
      - description: Agent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent found
          schema:
            $ref: '#/definitions/CreateAgentResponse'
        "404":
          description: Agent not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get an agent by ID
      tags:
      - agents
  /agent/create:
    post:
      consumes:
      - application/json
      description: Create a new agent for code analysis with the specified repository
      parameters:
      - description: Agent creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateAgentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Agent created successfully
          schema:
            $ref: '#/definitions/CreateAgentResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new agent
      tags:
      - agents
  /agents:
    get:
      description: Get a list of all agents
      produces:
      - application/json
      responses:
        "200":
          description: List of agents
          schema:
            items:
              $ref: '#/definitions/CreateAgentResponse'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List all agents
      tags:
      - agents
  /health:
    get:
      description: Returns the health status of the service
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check endpoint
      tags:
      - health
  /projects:
    get:
      description: Retrieve a list of projects with optional pagination and filtering
      parameters:
      - description: Token for pagination
        in: query
        name: next_token
        type: string
      - description: Maximum number of results to return
        in: query
        maximum: 100
        minimum: 1
        name: max_results
        type: integer
      - description: Tag filter in format key:value
        in: query
        name: tag_filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Projects retrieved successfully
          schema:
            $ref: '#/definitions/ListProjectsResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project for organizing codebases and agents
      parameters:
      - description: Project creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Project created successfully
          schema:
            $ref: '#/definitions/CreateProjectResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a new project
      tags:
      - projects
  /projects/{id}:
    delete:
      description: Delete a project by its unique identifier
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Project deleted successfully
          schema:
            $ref: '#/definitions/DeleteProjectResponse'
        "400":
          description: Invalid project ID
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a project
      tags:
      - projects
    get:
      description: Retrieve a project by its unique identifier
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Project retrieved successfully
          schema:
            $ref: '#/definitions/GetProjectResponse'
        "400":
          description: Invalid project ID
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update an existing project's details
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Project updated successfully
          schema:
            $ref: '#/definitions/UpdateProjectResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a project
      tags:
      - projects
swagger: "2.0"
